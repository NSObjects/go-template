/*
 * Generated from OpenAPI3 document
 * Module: {{.Pascal}}
 */

package app

{{if .HasTimeFields}}
import (
	"time"
)
{{end}}

// DTOs & Requests
{{range .Operations}}
{{if .HasRequestBodyOrQuery}}
// {{$.Pascal}}{{.MethodName}}Request
{{if .Summary}}// {{.Summary}}{{end}}
{{range .QueryParameters}}
{{if .Description}}// {{.FieldName}} {{.Description}}{{end}}
{{end}}
{{if .RequestBody}}
{{range .RequestBody.Fields}}
{{if .Description}}// {{.FieldName}} {{.Description}}{{end}}
{{end}}
{{end}}
type {{$.Pascal}}{{.MethodName}}Request struct {
{{range .QueryParameters}}
	{{.FieldName}} {{.GoType}} `param:"{{.Name}}" query:"{{.Name}}" form:"{{.Name}}" json:"{{.Name}}" xml:"{{.Name}}"{{if or .Required .ValidationRules}} validate:"{{if .Required}}required{{if .ValidationRules}},{{.ValidationRules}}{{end}}{{else}}{{.ValidationRules}}{{end}}"{{end}}`
{{end}}
{{if .RequestBody}}
{{range .RequestBody.Fields}}
	{{.FieldName}} {{.GoType}} `json:"{{.Name}}"{{if or .Required .ValidationRules}} validate:"{{if .Required}}required{{if .ValidationRules}},{{.ValidationRules}}{{end}}{{else}}{{.ValidationRules}}{{end}}"{{end}}`
{{end}}
{{end}}
}
{{end}}
{{end}}

{{range .ResponseDataTypes}}
// {{$.Pascal}}{{.GoType}}
{{if .Description}}// {{.Description}}{{end}}
{{range .Fields}}
{{if .Description}}// {{.FieldName}} {{.Description}}{{end}}
{{end}}
type {{$.Pascal}}{{.GoType}} struct {
{{range .Fields}}
	{{.FieldName}} {{.GoType}} `json:"{{.Name}}"{{if or .Required .ValidationRules}} validate:"{{if .Required}}required{{if .ValidationRules}},{{.ValidationRules}}{{end}}{{else}}{{.ValidationRules}}{{end}}"{{end}}`
{{end}}
}
{{end}}
