package data

import (
	"{{.ModulePath}}/internal/configs"
	"github.com/casbin/casbin/v2"
	gormadapter "github.com/casbin/gorm-adapter/v3"
	"go.uber.org/fx"
	"gorm.io/gorm"
)

// NewCasbinEnforcer 创建Casbin权限控制器
func NewCasbinEnforcer(db *gorm.DB, cfg configs.Config) (*casbin.Enforcer, error) {
	// 如果数据库连接为空，返回nil（可选功能）
	if db == nil {
		return nil, nil
	}

	// 使用GORM适配器
	adapter, err := gormadapter.NewAdapterByDB(db)
	if err != nil {
		return nil, err
	}

	// 创建enforcer
	enforcer, err := casbin.NewEnforcer("configs/rbac_model.conf", adapter)
	if err != nil {
		return nil, err
	}

	// 加载策略
	err = enforcer.LoadPolicy()
	if err != nil {
		return nil, err
	}

	return enforcer, nil
}

// CasbinModule Casbin模块
var CasbinModule = fx.Module("casbin",
	fx.Provide(NewCasbinEnforcer),
)
