package query

import (
        "context"

        "gorm.io/gorm"
)

// Query provides a lightweight wrapper around *gorm.DB so callers can
// swap in the generated query layer once domain models are defined.
type Query struct {
        db *gorm.DB
}

// Use binds the underlying *gorm.DB to the Query helper.
func Use(db *gorm.DB) *Query {
        return &Query{db: db}
}

// DB exposes the raw *gorm.DB for projects that want direct access.
func (q *Query) DB() *gorm.DB {
        if q == nil {
                return nil
        }
        return q.db
}

// WithContext returns a context-aware *gorm.DB handle to simplify call sites.
func (q *Query) WithContext(ctx context.Context) *gorm.DB {
        if q == nil || q.db == nil {
                return nil
        }
        return q.db.WithContext(ctx)
}
